plugins {
    id "java-library"
    id "io.qameta.allure" version "2.11.2"
    id "io.freefair.lombok" version "6.5.1"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    assertJVersion = "3.24.2",
    restAssuredVersion = "5.3.0",
    jacksonVersion = "2.14.0"


dependencies {
    testImplementation(
            "com.codeborne:selenide:6.11.0",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:5.9.1",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    )

    allure {
        version.set("2.21.0")
        adapter {
            allureJavaVersion.set(allureVersion)
            aspectjVersion.set("1.9.5")
            aspectjWeaver.set(true)

            frameworks {
                junit5 {
                    adapterVersion.set(allureVersion)
                    enabled.set(true)
                }
            }
        }
    }

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:2.0.5",
            "org.junit.jupiter:junit-jupiter-engine:5.9.1"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task api_tests(type: Test) {
    useJUnitPlatform {
        includeTags ("api")
    }
}
